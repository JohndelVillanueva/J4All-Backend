
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.1
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.1",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EmployerScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  company_name: 'company_name',
  company_description: 'company_description',
  industry: 'industry',
  company_size: 'company_size',
  website_url: 'website_url',
  logo_path: 'logo_path',
  founded_year: 'founded_year'
};

exports.Prisma.JobApplicationScalarFieldEnum = {
  id: 'id',
  job_id: 'job_id',
  seeker_id: 'seeker_id',
  employer_id: 'employer_id',
  application_date: 'application_date',
  cover_letter: 'cover_letter',
  status: 'status',
  notes: 'notes'
};

exports.Prisma.JobListingScalarFieldEnum = {
  id: 'id',
  employer_id: 'employer_id',
  job_title: 'job_title',
  job_description: 'job_description',
  job_requirements: 'job_requirements',
  job_location: 'job_location',
  job_type: 'job_type',
  salary_range_min: 'salary_range_min',
  salary_range_max: 'salary_range_max',
  posted_date: 'posted_date',
  expiration_date: 'expiration_date',
  is_active: 'is_active'
};

exports.Prisma.JobRequiredSkillScalarFieldEnum = {
  id: 'id',
  job_id: 'job_id',
  skill_id: 'skill_id',
  is_required: 'is_required',
  importance_level: 'importance_level'
};

exports.Prisma.JobSeekerScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  resume_text: 'resume_text',
  resume_file_path: 'resume_file_path',
  education: 'education',
  experience_years: 'experience_years',
  current_job_title: 'current_job_title',
  desired_job_title: 'desired_job_title',
  desired_salary: 'desired_salary',
  location_preference: 'location_preference'
};

exports.Prisma.JobSeekerSkillScalarFieldEnum = {
  id: 'id',
  seeker_id: 'seeker_id',
  skill_id: 'skill_id',
  proficiency_level: 'proficiency_level',
  years_of_experience: 'years_of_experience'
};

exports.Prisma.SavedJobScalarFieldEnum = {
  id: 'id',
  seeker_id: 'seeker_id',
  job_id: 'job_id',
  saved_date: 'saved_date',
  notes: 'notes'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password_hash: 'password_hash',
  user_type: 'user_type',
  first_name: 'first_name',
  last_name: 'last_name',
  phone_number: 'phone_number',
  created_at: 'created_at',
  last_login: 'last_login',
  is_active: 'is_active'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.EmployerOrderByRelevanceFieldEnum = {
  company_name: 'company_name',
  company_description: 'company_description',
  industry: 'industry',
  company_size: 'company_size',
  website_url: 'website_url',
  logo_path: 'logo_path'
};

exports.Prisma.JobApplicationOrderByRelevanceFieldEnum = {
  cover_letter: 'cover_letter',
  status: 'status',
  notes: 'notes'
};

exports.Prisma.JobListingOrderByRelevanceFieldEnum = {
  job_title: 'job_title',
  job_description: 'job_description',
  job_requirements: 'job_requirements',
  job_location: 'job_location',
  job_type: 'job_type'
};

exports.Prisma.JobSeekerOrderByRelevanceFieldEnum = {
  resume_text: 'resume_text',
  resume_file_path: 'resume_file_path',
  education: 'education',
  current_job_title: 'current_job_title',
  desired_job_title: 'desired_job_title',
  location_preference: 'location_preference'
};

exports.Prisma.SavedJobOrderByRelevanceFieldEnum = {
  notes: 'notes'
};

exports.Prisma.SkillOrderByRelevanceFieldEnum = {
  name: 'name',
  category: 'category'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  username: 'username',
  email: 'email',
  password_hash: 'password_hash',
  user_type: 'user_type',
  first_name: 'first_name',
  last_name: 'last_name',
  phone_number: 'phone_number'
};


exports.Prisma.ModelName = {
  Employer: 'Employer',
  JobApplication: 'JobApplication',
  JobListing: 'JobListing',
  JobRequiredSkill: 'JobRequiredSkill',
  JobSeeker: 'JobSeeker',
  JobSeekerSkill: 'JobSeekerSkill',
  SavedJob: 'SavedJob',
  Skill: 'Skill',
  User: 'User'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
